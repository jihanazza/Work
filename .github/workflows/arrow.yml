name: ArrowOS Build
on:
    workflow_dispatch:
        inputs:
            device:
                description: 'Device'
                required: true
                default: 'sweet'
                type: choice
                options:
                - sweet
            variant:
                description: 'Build variant'
                required: true
                default: 'gapps'
                type: choice
                options:
                - vanilla
                - gapps
            clean:
                description: 'Clean strategy'
                required: true
                default: 'partial'
                type: choice
                options:
                - none
                - partial
                - full
jobs:
    Arrow-Build:
      runs-on: self-hosted
      permissions: read-all|write-all
      if: ${{ inputs.device }}
      steps:
        - name: Verify the environment
          run: |
            if [ $UID -eq 0 ]; then echo "Running as root, aborting"; exit 1; else echo "Running as $USER"; fi
        - name: Get current date
          id: date
          run: |
            echo "::set-output name=date::$(date +'%Y-%m-%d--%H-%M-%S')"
        - name: Clean the build directory
          run: |
            cd ~/android/arrow-13.0/
            if [[ "${{ inputs.clean }}" == "partial" ]]; then echo "Performing a partial clean"; rm -rf out/target/product/${{ inputs.device }}; elif [[ "${{ inputs.clean }}" == "full" ]]; then echo "Performing a full clean"; rm -rf out; else echo "Skipping clean"; fi

            rm -f out/target/product/${{ inputs.device }}/Arrow*.zip*
            rm -f ${GITHUB_WORKSPACE}/Arrow*.zip*
        - name: Fetch the latest changes
          run: |
            cd ~/android/arrow-13.0/
            repo sync --force-sync
        - name: Run the build
          run: |
            cd ~/android/arrow-13.0/
            echo "Building for ${{ inputs.device }}"

            variant=${{ inputs.variant }}
            if [[ $variant == "vanilla" ]]; then echo "Building vanilla variant"; elif [[ $variant == "gapps" ]]; then echo "Building gapps variant"; export ARROW_GAPPS=true; else echo "Unknown variant, falling back to vanilla"; fi
            
            export ARROW_BETA=true

            source build/envsetup.sh
            lunch arrow_${{ inputs.device }}-userdebug
            m bacon
            cp out/target/product/${{ inputs.device }}/Arrow*.zip* ${GITHUB_WORKSPACE}
        - uses: "marvinpinto/action-automatic-releases@latest"
          with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            title: "ArrowOS Build ${{ inputs.variant }}"
            automatic_release_tag: "${{ inputs.device }}-${{ steps.date.outputs.date }}"
            files: |
                Arrow*.zip*
